// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BookManagement.Services.Contact.Data.Migrations
{
    [DbContext(typeof(BookManagementDbContext))]
    [Migration("20230412020214_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("BookManagement.Services.Contact.Core.Models.ContactTypes", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("integer")
                    .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                b.Property<string>("Value")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("character varying(50)");

                b.HasKey("Id");

                b.ToTable("ContactTypes");

                b.HasData(
                    new
                    {
                        Id = 1,
                        Value = "Telefon No"
                    },
                    new
                    {
                        Id = 2,
                        Value = "E-mail"
                    },
                    new
                    {
                        Id = 3,
                        Value = "Konum"
                    });
            });

            modelBuilder.Entity("BookManagement.Services.Contact.Core.Models.PersonContacts", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid");

                b.Property<int>("ContactTypeId")
                    .HasColumnType("integer");

                b.Property<Guid>("PersonId")
                    .HasColumnType("uuid");

                b.Property<string>("Value")
                    .IsRequired()
                    .HasColumnType("text");

                b.HasKey("Id");

                b.HasIndex("ContactTypeId");

                b.HasIndex("PersonId");

                b.ToTable("PersonContacts");
            });

            modelBuilder.Entity("BookManagement.Services.Contact.Core.Models.Persons", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uuid");

                b.Property<string>("Company")
                    .HasMaxLength(250)
                    .HasColumnType("character varying(250)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("character varying(200)");

                b.Property<string>("Surname")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("character varying(200)");

                b.HasKey("Id");

                b.ToTable("Persons");
            });

            modelBuilder.Entity("BookManagement.Services.Contact.Core.Models.PersonContacts", b =>
            {
                b.HasOne("BookManagement.Services.Contact.Core.Models.ContactTypes", "ContactType")
                    .WithMany()
                    .HasForeignKey("ContactTypeId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("BookManagement.Services.Contact.Core.Models.Persons", "Person")
                    .WithMany("PersonContacts")
                    .HasForeignKey("PersonId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("ContactType");

                b.Navigation("Person");
            });

            modelBuilder.Entity("BookManagement.Services.Contact.Core.Models.Persons", b =>
            {
                b.Navigation("PersonContacts");
            });
#pragma warning restore 612, 618
        }
    }
}
